name: Build
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-24.04
    #permissions: 
    #  id-token: write 
    #  contents: read
    permissions: write-all
    steps:
      - name: Get latest release
        id: get_release  
        run: |
          # Fetch release information and extract the release tag
          RELEASE_TAG=$(curl -s https://api.github.com/repos/cheat/cheat/releases/latest | jq -r '.tag_name')
          echo "release_tag=$RELEASE_TAG" >> $GITHUB_OUTPUT
          echo "release_tag=$RELEASE_TAG" >> $GITHUB_ENV
          echo "latest release: $RELEASE_TAG"
                
      - name: Store artifacts
        run: |
          # Store the newly fetched release version in a file
          mkdir release
          echo "${{ steps.get_release.outputs.RELEASE_TAG }}" > release/cheat-release-info
          echo "Saved ${{ steps.get_release.outputs.RELEASE_TAG }} to release/cheat-release-info"

      - name: Retrieve version
        id: version
        run: |
          echo "TAG_NAME=$(cat release/cheat-release-info)" >> $GITHUB_OUTPUT
        
      - uses: actions/checkout@v4
        with:
          github-server-url: 'https://github.com'
          repository: 'cheat/cheat'
          fetch-tags: 'true'
          token: '${{ secrets.ACCESS_TOKEN }}'
          ref: '${{ steps.version.outputs.TAG_NAME }}'
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ steps.version.outputs.TAG_NAME }}
          release_name: Release ${{ steps.version.outputs.TAG_NAME }}
        
