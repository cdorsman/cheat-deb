name: Build release
on:
  workflow_dispatch:  
jobs:
  check:
    runs-on: ubuntu-24.04
    steps:
     - name: Create BUILD_ROOT
       id: create-BUILD_ROOT
       run: |
          sudo mkdir -p ${{ vars.BUILD_ROOT }}
          sudo chmod -R 777 ${{ vars.BUILD_ROOT }}
          sudo chown -R $(whoami) ${{ vars.BUILD_ROOT }}
          cd ${{ vars.BUILD_ROOT }}
          
     - name: Get latest release from cheat
       id: get_release
       run: |
          # Fetch release information and extract the release tag
          RELEASE_TAG=$(curl -sL https://api.github.com/repos/${{ vars.REPO_OWNER }}/${{ vars.REPO_NAME }}/releases/latest | jq -r '.tag_name')
          echo "release_tag=$RELEASE_TAG" >> $GITHUB_OUTPUT
          echo "latest release: $RELEASE_TAG"
  
     - name: Download Assets
       uses: i3h/download-release-asset@v1.3.3
       with:
          owner: ${{ vars.REPO_OWNER }}
          repo: ${{ vars.REPO_NAME }}
          tag: ${{ steps.get_release.outputs.RELEASE_TAG  }}
          file: ${{ vars.APP_NAME }}-${{ vars.BUILD_PLATFORM }}-${{ vars.BUILD_ARCH }}.gz
          path:  ${{ vars.BUILD_ROOT }}/tmp

     - name: Decompress package
       run: gunzip ${{ vars.BUILD_ROOT }}/tmp/${{ vars.APP_NAME }}-${{ vars.BUILD_PLATFORM }}-${{ vars.BUILD_ARCH }}.gz
            
     - name: Move program
       run: |
          sudo mkdir -p ${{ vars.BUILD_ROOT }}/.debpkg/usr/local/bin
          sudo chown -R $(whoami) ${{ vars.BUILD_ROOT }}
          cp ${{ vars.BUILD_ROOT }}/tmp/${{ vars.APP_NAME }}-${{ vars.BUILD_PLATFORM }}-${{ vars.BUILD_ARCH }} ${{ vars.BUILD_ROOT }}/.debpkg/usr/local/bin/cheat
          chmod +x ${{ vars.BUILD_ROOT }}/.debpkg/usr/local/bin/cheat
          
     - uses: jiro4989/build-deb-action@v3
       with:
          package: ${{ vars.APP_NAME }}
          package_root: ${{ vars.BUILD_ROOT }}/.debpkg
          maintainer: cdorsman
          version: ${{ steps.get_release.outputs.RELEASE_TAG  }}
          arch: ${{ vars.BUILD_ARCH }}
          desc: 'With cheat you can create and view interactive cheatsheets on the command-line.'
          homepage: 'https://github.com/cheat/cheat'

     - name: Create Release
       id: create_release
       uses: actions/create-release@v1
       env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
          tag_name: ${{ steps.get_release.outputs.RELEASE_TAG }}
          release_name: ${{ vars.APP_NAME }}
          draft: false
          prerelease: false

     - name: Upload Release Asset
       id: upload-release-asset 
       uses: actions/upload-release-asset@v1
       env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_name: ${{ vars.APP_NAME }}_${{ steps.get_release.outputs.RELEASE_TAG }}_${{ vars.BUILD_ARCH }}.deb
          asset_content_type: application/deb
