name: Build release
on:
  workflow_dispatch:  
jobs:
  check:
    runs-on: ubuntu-24.04
    steps:
      - name: Get latest release from cheat
        id: get_release
        run: |
          # Fetch release information and extract the release tag
          RELEASE_TAG=$(curl -sL https://api.github.com/repos/cheat/cheat/releases/latest | jq -r '.tag_name')
          echo "release_tag=$RELEASE_TAG" >> $GITHUB_OUTPUT
          echo "latest release: $RELEASE_TAG"
  
      - name: Download Assets
        uses: i3h/download-release-asset@v1.3.3
        with:
          owner: cheat
          repo: cheat 
          tag: ${{ steps.get_release.outputs.RELEASE_TAG  }}
          file: cheat-linux-amd64.gz
          path:  ${{ env.buildroot }}/tmp

      - name: Decompress package
        run: gunzip ${{ env.buildroot }}/tmp/cheat-linux-amd64.gz
            
      - name: create sample script
        run: |
          mkdir -p .debpkg/usr/local/bin
          cp ${{ env.buildroot }}/tmp/cheat-linux-amd64 .debpkg/usr/local/bin/cheat
          chmod +x .debpkg/usr/local/bin/cheat
          
      - uses: jiro4989/build-deb-action@v3
        with:
          package: cheat
          package_root: .debpkg
          maintainer: cdorsman
          version: ${{ steps.get_release.outputs.RELEASE_TAG  }}
          arch: 'amd64'
          desc: 'With cheat you can create and view interactive cheatsheets on the command-line.'
          homepage: 'https://github.com/jiro4989/build-deb-action'

      - name: Create Release
        # You may pin to the exact commit or the version.
        # uses: ncipollo/release-action@2c591bcc8ecdcd2db72b97d6147f871fcd833ba5
        uses: ncipollo/release-action@v1.14.0
        with:
          name: cheat 
          owner: chrisallenlane
          repo: test-packaging
          prerelease: false
          replacesArtifacts: true
          tag:  ${{ steps.get_release.outputs.RELEASE_TAG  }} 
