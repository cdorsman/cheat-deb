name: Build release
on:
  workflow_dispatch:  
jobs:
  check:
    runs-on: ubuntu-24.04
    steps:
     - name: Create buildroot
       id: create-buildroot
       run: |
          sudo mkdir -p /buildroot/tmp
          sudo chmod -R 777 /buildroot/tmp
          echo "buildroot=/buildroot" >> $GITHUB_OUTPUT
          echo "buildroot=/buildroot" >> $GITHUB_ENV
          
     - name: Get latest release from cheat
       id: get_release
       run: |
          # Fetch release information and extract the release tag
          RELEASE_TAG=$(curl -sL https://api.github.com/repos/cheat/cheat/releases/latest | jq -r '.tag_name')
          echo "release_tag=$RELEASE_TAG" >> $GITHUB_OUTPUT
          echo "latest release: $RELEASE_TAG"
  
     - name: Download Assets
       uses: i3h/download-release-asset@v1.3.3
       with:
          owner: cheat
          repo: cheat 
          tag: ${{ steps.get_release.outputs.RELEASE_TAG  }}
          file: cheat-linux-amd64.gz
          path:  ${{ env.buildroot }}/tmp

     - name: Decompress package
       run: gunzip ${{ env.buildroot }}/tmp/cheat-linux-amd64.gz
            
     - name: Move program
       run: |
          mkdir -p .debpkg/usr/local/bin
          cp ${{ env.buildroot }}/tmp/cheat-linux-amd64 .debpkg/usr/local/bin/cheat
          chmod +x .debpkg/usr/local/bin/cheat
          
     - uses: jiro4989/build-deb-action@v3
       with:
          package: cheat
          package_root: .debpkg
          maintainer: cdorsman
          version: ${{ steps.get_release.outputs.RELEASE_TAG  }}
          arch: 'amd64'
          desc: 'With cheat you can create and view interactive cheatsheets on the command-line.'
          homepage: 'https://github.com/jiro4989/build-deb-action'

     - name: Create Release
       id: create_release
       uses: actions/create-release@v1
       env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
          tag_name: ${{ steps.get_release.outputs.RELEASE_TAG  }}
          release_name: cheat
          draft: false
          prerelease: false

     - name: Upload Release Asset
       id: upload-release-asset 
       uses: actions/upload-release-asset@v1
       env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_name: cheat_4.4.2_amd64.deb
          asset_content_type: application/deb
